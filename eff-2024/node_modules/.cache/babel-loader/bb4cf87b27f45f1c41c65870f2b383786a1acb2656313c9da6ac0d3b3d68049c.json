{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LOKMAN\\\\Documents\\\\Front-end-react\\\\EFF 2024\\\\eff-2024\\\\src\\\\expert2.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Experts2() {\n  _s();\n  const [experts, setExperts] = useState([]);\n  useEffect(function () {\n    async function getExperts() {\n      const data = await fetch(\"http://localhost:4000/experts\");\n      const expertsData = await data.json();\n      setExperts(expertsData);\n    }\n    getExperts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: experts.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item.id\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 29\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Experts2, \"O3IhcNhmBiP3KxQFMIPuOzJu9ys=\");\n_c = Experts2;\nexport default Experts2;\nvar _c;\n$RefreshReg$(_c, \"Experts2\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Experts2","_s","experts","setExperts","getExperts","data","fetch","expertsData","json","children","map","item","index","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/LOKMAN/Documents/Front-end-react/EFF 2024/eff-2024/src/expert2.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\n\r\n\r\nfunction Experts2(){\r\n\r\n    const [experts,setExperts] = useState([])\r\n\r\n    useEffect(function(){\r\n        async function getExperts() {\r\n            const data = await fetch(\"http://localhost:4000/experts\")\r\n            const expertsData = await data.json()\r\n            setExperts(expertsData)\r\n        }getExperts()\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <ul>\r\n                {experts.map((item,index)=>{\r\n                    return (\r\n                        <>\r\n                            <li key={index}>{item.id}</li>\r\n                        </>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Experts2"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG3C,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EAEf,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEzCD,SAAS,CAAC,YAAU;IAChB,eAAeU,UAAUA,CAAA,EAAG;MACxB,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;MACzD,MAAMC,WAAW,GAAG,MAAMF,IAAI,CAACG,IAAI,CAAC,CAAC;MACrCL,UAAU,CAACI,WAAW,CAAC;IAC3B;IAACH,UAAU,CAAC,CAAC;EACjB,CAAC,EAAC,EAAE,CAAC;EAEL,oBACIP,OAAA,CAAAE,SAAA;IAAAU,QAAA,eACIZ,OAAA;MAAAY,QAAA,EACKP,OAAO,CAACQ,GAAG,CAAC,CAACC,IAAI,EAACC,KAAK,KAAG;QACvB,oBACIf,OAAA,CAAAE,SAAA;UAAAU,QAAA,eACIZ,OAAA;YAAAY,QAAA,EAAiBE,IAAI,CAACE;UAAE,GAAfD,KAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAe;QAAC,gBAChC,CAAC;MAEX,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC,gBACP,CAAC;AAEX;AAAChB,EAAA,CAzBQD,QAAQ;AAAAkB,EAAA,GAARlB,QAAQ;AA2BjB,eAAeA,QAAQ;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}